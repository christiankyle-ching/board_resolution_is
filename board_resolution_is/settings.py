"""
Django settings for board_resolution_is project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['BRIS_SECRET']

# SECURITY WARNING: don't run with debug turned on in production!
# This will only turn to true if environment variable is equals to "True"
DEBUG = os.environ.get('BRIS_DEBUG', 'False') == 'True'

INTERNAL_IPS = [
    '127.0.0.1',
]

DEBUG_ALLOWED_HOSTS = [
    # For ngrok
    '*.ngrok.io',
]

ALLOWED_HOSTS = [
    # This server
    '127.0.0.1',
    'localhost',

    # TODO: Change based on IP in the environment. ex. 192.168.1.*
    # Consider also using * if port 80 and 443 will not be opened in firewall anyway
    # PCs in the local network
    '*',
] + (DEBUG_ALLOWED_HOSTS if DEBUG else [])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Packages
    'tailwind',
    'theme',
    'django_browser_reload',
    'simple_history',

    # Custom Apps
    'resolutions.apps.ResolutionsConfig',
    'users.apps.UsersConfig'

    # Deployment
    # 'mod_wsgi.server',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_browser_reload.middleware.BrowserReloadMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
]

ROOT_URLCONF = 'board_resolution_is.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # Custom Context Processors
                'theme.context_processors.other_accounts'
            ],
        },
    },
]

WSGI_APPLICATION = 'board_resolution_is.wsgi.application'

# Theming
TAILWIND_APP_NAME = 'theme'

# TODO: Replace with where your nodejs/npm is located
# Use `where npm` in cmd to know the location, assuming you have nodejs installed
NPM_BIN_PATH = os.environ.get('NPM_BIN_PATH', '')

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('PSQL_BRIS_DBNAME', 'db_board_resolution_is'),
        'USER': os.environ.get('PSQL_USER', 'postgres'),
        'PASSWORD': os.environ['PSQL_PASSWORD'],
        'HOST': os.environ.get('PSQL_HOST', '127.0.0.1'),
        'PORT': os.environ.get('PSQL_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Manila'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

MEDIA_ROOT = 'media'  # Folder path where files are stored in server
MEDIA_URL = '/media/'  # URL path for download

STATIC_ROOT = 'static'  # Folder path where files are stored in server
STATIC_URL = '/static/'  # URL path for download

AUTH_USER_MODEL = 'users.User'

# TODO: Modify these values (Client-based)
CLIENT_NAME = "PLV Board Resolution"

# Email Backend (Gmail)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = os.environ.get('BRIS_EMAIL_USERNAME', '')
EMAIL_HOST_PASSWORD = os.environ.get('BRIS_EMAIL_PASSWORD', '')

DEFAULT_FROM_EMAIL = os.environ.get('BRIS_EMAIL_USERNAME', '')

# Default Redirects

LOGIN_URL = 'users:auth:login'
LOGIN_REDIRECT_URL = 'resolutions:index'
LOGOUT_REDIRECT_URL = 'users:auth:login'

print(f"----- Starting {CLIENT_NAME} -----")
print(f"DEBUG: {DEBUG} {'!!!WARNING!!!' if DEBUG else ''}")
print(f"ALLOWED_HOSTS: {ALLOWED_HOSTS}")
print(f"EMAIL_HOST_USER: {EMAIL_HOST_USER}")
